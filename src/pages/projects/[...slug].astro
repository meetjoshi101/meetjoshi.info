---
import MainLayout from '../../layouts/MainLayout.astro';
import { getCollection, getEntry } from 'astro:content';
import { Image } from 'astro:assets';

// Get the slug from URL parameters
const { slug } = Astro.params;

// Set default values
let project;
let Content;
let title = "Project Not Found";
let description = "The requested project could not be found.";

// Try to fetch the project data
try {
  if (!slug) {
    throw new Error("No slug provided");
  }
  
  // First, check if this is a direct match for a project slug
  project = await getEntry('projects', slug);
  
  if (project) {
    // If we found the project, get the rendered content
    const rendered = await project.render();
    Content = rendered.Content;
    
    title = `${project.data.title} | Projects`;
    description = project.data.description;
  } else {
    // If no direct match, try to find a project with a matching slug in the collection
    const allProjects = await getCollection('projects');
    const foundProject = allProjects.find(p => p.slug === slug);
    
    if (foundProject) {
      project = foundProject;
      const rendered = await project.render();
      Content = rendered.Content;
      
      title = `${project.data.title} | Projects`;
      description = project.data.description;
    } else {
      // No project found, we'll use the default 404 values
      throw new Error(`Project not found: ${slug}`);
    }
  }
} catch (error) {
  console.error(`Error loading project (${slug}):`, error);
  // We'll show a 404 page with the default title/description
  Astro.response.status = 404;
}
---

<MainLayout title={title} description={description}>
  <div class="container mx-auto px-4 py-8">
    {project ? (
      <article class="prose lg:prose-xl mx-auto">
        <h1>{project.data.title}</h1>
        
        {project.data.image && (
          <div class="mb-6">
            <Image 
              src={project.data.image} 
              alt={project.data.title} 
              width={800} 
              height={400} 
              class="rounded-lg shadow-lg"
            />
          </div>
        )}
        
        <div class="flex gap-2 mb-4">
          {project.data.technologies?.map((tech: string) => (
            <span class="badge badge-outline">{tech}</span>
          ))}
        </div>
        
        <div class="mb-6">
          <p class="text-lg">{project.data.description}</p>
        </div>
        
        {Content && <Content />}
        
        <div class="flex gap-4 mt-8">
          {project.data.liveUrl && (
            <a href={project.data.liveUrl} target="_blank" rel="noopener noreferrer" class="btn btn-primary">
              Live Demo
            </a>
          )}
          {project.data.github && (
            <a href={project.data.github} target="_blank" rel="noopener noreferrer" class="btn btn-outline">
              View Code
            </a>
          )}
        </div>
      </article>
    ) : (
      <div class="text-center py-16">
        <h1 class="text-4xl font-bold mb-4">Project Not Found</h1>
        <p class="mb-8">The project you're looking for doesn't exist or has been moved.</p>
        <a href="/projects" class="btn btn-primary">View All Projects</a>
      </div>
    )}
  </div>
</MainLayout>