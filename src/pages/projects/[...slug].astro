---
import { getCollection, type CollectionEntry } from 'astro:content';
import MainLayout from '../../layouts/MainLayout.astro';

export async function getStaticPaths() {
    const projects = await getCollection('projects');
    return projects.map((project) => ({
        params: { slug: project.slug },
        props: { project },
    }));
}

interface Props {
    project: CollectionEntry<'projects'>;
}

const { project } = Astro.props;
const { Content } = await project.render();

// Generate keywords based on technologies and project type
const techKeywords = project.data.technologies?.join(', ').toLowerCase() || '';
const developerKeywords = "software developer portfolio, web developer project, full stack developer";
const combinedKeywords = `${techKeywords}, ${developerKeywords}, ${project.data.title.toLowerCase()}`;

// Enhanced description to include developer keywords
let enhancedDescription = project.data.description || `${project.data.title} - Project Details`;
if (!enhancedDescription.toLowerCase().includes('developer')) {
    enhancedDescription = `${enhancedDescription} | Project by Software & Web Developer Meet Joshi`;
}

// Format the publication date
const publishDate = project.data.publishDate;
---

<MainLayout 
    title={`${project.data.title} | Web Development Project`}
    description={enhancedDescription}
    image={project.data.image || '/favicon.svg'}
    keywords={combinedKeywords}
    type="portfolio"
    publishedDate={publishDate}
>
    <article class="py-20" itemscope itemtype="https://schema.org/SoftwareSourceCode">
        <meta itemprop="datePublished" content={publishDate.toISOString()} />
        <meta itemprop="programmingLanguage" content={project.data.technologies.join(', ')} />
        <meta itemprop="codeRepository" content={project.data.github || ''} />
        
        <div class="container mx-auto px-4">
            <div class="max-w-4xl mx-auto">
                {project.data.image && (
                    <figure class="mb-8" itemprop="image">
                        <img 
                            src={project.data.image}
                            alt={`${project.data.title} - Web Development Project by Software Developer Meet Joshi`}
                            class="w-full h-80 object-cover rounded-box"
                        />
                    </figure>
                )}
                <div class="flex flex-wrap gap-2 mb-6">
                    {project.data.technologies.map((tech) => (
                        <div class="badge badge-primary badge-lg" itemprop="keywords">{tech}</div>
                    ))}
                </div>
                <h1 class="text-4xl font-bold mb-8" itemprop="name">{project.data.title}</h1>
                <div class="card bg-base-200">
                    <div class="card-body">
                        <div class="prose prose-lg max-w-none" itemprop="description">
                            <Content />
                        </div>
                    </div>
                </div>
                
                <!-- Project details for SEO -->
                <div class="mt-12 p-6 bg-base-200 rounded-box">
                    <h2 class="text-xl font-bold mb-4">Project Details</h2>
                    <ul class="space-y-2">
                        <li><strong>Type:</strong> Web Development Project</li>
                        <li><strong>Developer:</strong> <span itemprop="author">Meet Joshi</span></li>
                        <li><strong>Stack:</strong> {project.data.technologies.join(', ')}</li>
                        <li><strong>Completed:</strong> <time datetime={publishDate.toISOString()}>
                            {publishDate.toLocaleDateString('en-US', {
                                year: 'numeric',
                                month: 'long'
                            })}
                        </time></li>
                    </ul>
                </div>
                
                <div class="divider my-12"></div>
                <div class="flex flex-wrap gap-4">
                    <a href="/projects" class="btn btn-outline btn-primary">
                        ‚Üê Back to Projects
                    </a>
                    {project.data.github && (
                        <a 
                            href={project.data.github}
                            target="_blank"
                            rel="noopener noreferrer"
                            class="btn btn-primary gap-2"
                            aria-label="View the source code for this software development project"
                            itemprop="codeRepository"
                        >
                            <svg class="h-5 w-5" fill="currentColor" viewBox="0 0 24 24">
                                <path d="M12 0C5.37 0 0 5.37 0 12c0 5.3 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61-.546-1.385-1.335-1.755-1.335-1.755-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.605-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 21.795 24 17.295 24 12c0-6.63-5.37-12-12-12"/>
                            </svg>
                            View on GitHub
                        </a>
                    )}
                    {project.data.liveUrl && (
                        <a 
                            href={project.data.liveUrl}
                            target="_blank"
                            rel="noopener noreferrer"
                            class="btn btn-primary gap-2"
                            aria-label="Visit the live demo of this web development project"
                            itemprop="url"
                        >
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
                            </svg>
                            View Live Demo
                        </a>
                    )}
                </div>
                
                <!-- Related tech section for SEO -->
                <div class="mt-12">
                    <h3 class="text-lg font-medium mb-4">Related Technologies</h3>
                    <div class="flex flex-wrap gap-2">
                        {project.data.technologies.map((tech) => (
                            <span class="badge badge-outline">{tech}</span>
                        ))}
                        <span class="badge badge-outline">Web Development</span>
                        <span class="badge badge-outline">Software Development</span>
                    </div>
                </div>
            </div>
        </div>
    </article>
</MainLayout>